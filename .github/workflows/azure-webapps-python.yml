name: Build and Deploy Streamlit App to Azure

env:
  AZURE_WEBAPP_NAME: pspgpt
  PYTHON_VERSION: '3.13'

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: 📦 Create virtual environment and install dependencies
        run: |
          python -m venv antenv
          source antenv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          # Ensure lib64 links to lib
          mkdir -p antenv/lib/python3.9/site-packages
          mkdir -p antenv/lib64/python3.9
          ln -sfn antenv/lib/python3.9/site-packages antenv/lib64/python3.9/site-packages

      - name: ❌ Disable Oryx build
        run: touch .skipOryxBuild

      - name: 📝 Create startup.sh for Azure to launch app
        run: |
          echo '#!/bin/bash' > startup.sh
          echo 'source antenv/bin/activate' >> startup.sh
          echo 'exec python -m streamlit run PSP_GPT_v5.py --server.port=$PORT --server.enableCORS=false' >> startup.sh
          chmod +x startup.sh
          env:
          AZURE_ENDPOINT: ${{ secrets.AZURE_ENDPOINT }}
          AZURE_CHATOPEN_API_NEW: ${{ secrets.AZURE_CHATOPEN_API_NEW }}

      - name: 🧹 Clean up unneeded files in venv
        run: |
          find antenv/ -name "__pycache__" -type d -exec rm -rf {} +
          find antenv/ -name "*.dist-info" -type d -exec rm -rf {} +
          find antenv/ -name "*.egg-info" -type d -exec rm -rf {} +
          find antenv/ -name "tests" -type d -exec rm -rf {} +
          find antenv/ -name "*.pyd" -exec rm -f {} +
          find antenv/ -name "*.whl" -exec rm -f {} +
          find antenv/ -name "*.so" -exec strip --strip-unneeded {} 2>/dev/null || true

      - name: 📦 Zip app and venv (excluding unnecessary files)
        run: |
          # zip -r app.zip . -x "*.git*" "*.github*" "*.zip" "__pycache__/*"
          zip -r app.zip . .skipOryxBuild -x "*.git*" "*.github*" "*.zip" "__pycache__/*"

      - name: 🧾 Check app.zip size
        run: |
          du -sh app.zip

      - name: 🚀 Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: app.zip
